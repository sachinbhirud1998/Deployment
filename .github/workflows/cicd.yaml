name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Lint Code
        run: echo "Linting repository"

      - name: Run Unit Tests
        run: echo "Running unit tests"

  build-and-push-ecr-image:
    name: Continuous Delivery
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push Image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: 565709307194.dkr.ecr.ap-south-1.amazonaws.com
          ECR_REPOSITORY: deployment1
          IMAGE_TAG: latest
        run: |
          echo "Building image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"  # Debugging line
          docker build -t "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" .
          docker push "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

  Continuous-Deployment:
    needs: build-and-push-ecr-image
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Pull Latest Image from ECR
        run: |
          IMAGE_URI="565709307194.dkr.ecr.ap-south-1.amazonaws.com/deployment1:latest"
          echo "Pulling image: $IMAGE_URI"  # Debugging line
          docker pull "$IMAGE_URI"

      - name: Stop and Remove Existing Container (if Running)
        run: |
          docker ps -q --filter "name=cnncls" | grep -q . && docker stop cnncls && docker rm -fv cnncls || echo "No running container to stop"

      - name: Run Docker Image to Serve Users
        run: |
          IMAGE_URI="565709307194.dkr.ecr.ap-south-1.amazonaws.com/deployment1:latest"
          echo "Running Docker image: $IMAGE_URI"  # Debugging line

          # Check if the image URI is set and valid
          if [[ -z "$IMAGE_URI" ]]; then
            echo "Image URI is not set."
            exit 1
          fi

          # Run the Docker container on port 5000
          docker run -d -p 5000:5000 --name cnncls \
            -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
            -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            -e AWS_REGION="ap-south-1" \
            "$IMAGE_URI" || { echo "Failed to run Docker container"; exit 1; }
